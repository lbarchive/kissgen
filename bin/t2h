#!/usr/bin/env bash
# Copyright (c) 2018 Yu-Jie Lin
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


# encode HTML reserved entities [1] from standard input, and send result to
# standard output.
# [1] https://developer.mozilla.org/en-US/docs/Glossary/Entity#Reserved_characters
t2h_html_encode()
{
    sed -e 's/&/\&amp;/g'   \
        -e 's/</\&lt;/g'    \
        -e 's/>/\&gt;/g'    \
        -e 's/"/\&quot;/g'
}


#############
# timestamp #
#############


# get file $1 modification time in seconds from Unix epoch
t2h_get_ts()
{
    stat -c %Y "$1"
}


# set file $2 modification time to $1 in seconds from Unix epoch
t2h_set_ts()
{
    touch -d @"$1" "$2"
}


################
# command-line #
################


t2h_usage()
{
    echo "Usage: $(basename "$0") <text> <html>"
}


t2h_main()
{
    local tf="$1"   # input text file
    local hf="$2"   # output HTML file

    if [[ -z "$tf" || -z "$hf" ]]; then
        t2h_usage >&2
        return 1
    fi

    local upd_ts=0
    if [[ "$tf" != - && "$hf" != - ]]; then
        # only check timestamp with $hf exists
        if [[ -f "$hf" ]] \
        && (($(t2h_get_ts "$tf") == $(t2h_get_ts "$hf"))); then
            echo 'timestamp unchanged, generation skipped'
            return 0
        fi
        upd_ts=1
    else
        [[ "$tf" == - ]] && tf='/dev/stdin'
        [[ "$hf" == - ]] && hf='/dev/stdout'
    fi

    # check if $tf readable
    if [[ ! -r "$tf" ]]; then
        echo "$tf is not readable!" >&2
        return 1
    fi

    {
        echo '<!DOCTYPE html>'

        echo -n '<title>'
        echo -n "$(basename "$tf")" | t2h_html_encode
        echo   '</title>'

        echo -n '<pre>'
        t2h_html_encode
        echo   '</pre>'
    } < "$tf" > "$hf"

    if ((upd_ts)); then
        t2h_set_ts "$(t2h_get_ts "$tf")" "$hf"
    fi
}


[[ "$0" != "$BASH_SOURCE" ]] || t2h_main "$@"
