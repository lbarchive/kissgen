#!/usr/bin/env bash
# Copyright (c) 2018 Yu-Jie Lin
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


NAME=IDX

T2H="$(dirname $(readlink -f "$BASH_SOURCE"))/t2h"


#############
# timestamp #
#############


# get file $1 modification time in seconds from Unix epoch
idx_get_ts()
{
    stat -c %Y "$1"
}


# set file $2 modification time to $1 in seconds from Unix epoch
idx_set_ts()
{
    touch -d @"$1" "$2"
}


##############
# generation #
##############


idx_t2h_conf()
{
    echo 't2h_hook_pre=(t2h_filter_linkify)'
}


IDX_FILENAME='00INDEX.html'


# generator directory list 00INDEX.html for $2 directory
# $1: dir path
# $2: html dirtory
idx_dir()
{
    local dir_path="$1"
    local hd="${2%/}"   # output HTML directory
    cd "$hd"

    if [[ -f "$IDX_FILENAME" ]] \
    && (($(idx_get_ts .) == $(idx_get_ts "$IDX_FILENAME"))); then
        # no need to re-generate 00INDEX.html, but still need to loop through
        # sub-directories.
        for d in */; do
            [[ "$d" == '*/' ]] && continue
            ( idx_dir "$dir_path$d" "$d" ) >&2
        done
        return
    fi

    echo "$NAME: [IDX] $IDX_HTML_DIR$dir_path"
    {
        echo "Index of $dir_path"
        echo "[C] ."
        echo
        echo

        if [[ "$dir_path" != '/' ]]; then
            echo "[I] ../$IDX_FILENAME"
            echo "[U] .."
            echo
        fi

        for d in */; do
            [[ "$d" == '*/' ]] && continue
            ( idx_dir "$dir_path$d" "$d" ) >&2
            d="${d%/}"
            echo "[I] ./$d/$IDX_FILENAME"
            echo "[D] ./$d"
            echo
        done
        echo

        for h in *.html; do
            [[ "$h" == "$IDX_FILENAME" ]] && continue
            echo "[H] ./$h"
            local tf="${h%.html}.txt"
            if [[ -f "$tf" ]]; then
                echo "[T] ./$tf"
            fi
            echo
        done
    } |
    {
        if [[ -z "$IDX_T2H_CONF" ]]; then
            "$T2H" -c <(idx_t2h_conf) -t "Index of $dir_path" - "$IDX_FILENAME"
        else
            "$T2H" -c "$IDX_T2H_CONF" -t "Index of $dir_path" - "$IDX_FILENAME"
        fi
    }

    idx_set_ts "$(idx_get_ts $IDX_FILENAME)" .
}


################
# command-line #
################


idx_usage()
{
    echo "Usage: $(basename "$0") <html.dir>"
}


IDX_HELP="Generating directory listings

Options:
    -t <t2h.sh>     configuration script for t2h

    -h              this help message
"


idx_parse()
{
    OPTIND=1
    while getopts "t:h" ARG; do
        case "$ARG" in
            t)  IDX_OPT_T2H_CONF="$OPTARG";;
            h)
                idx_usage
                idx_help
                exit 0
                ;;
        esac
    done

    shift $((OPTIND - 1))

    if (($# != 1)); then
        idx_usage >&2
        exit 1
    fi

    IDX_HTML_DIR="$1"
    if [[ -r "$IDX_OPT_T2H_CONF" ]]; then
        IDX_T2H_CONF="$(readlink -f "$IDX_OPT_T2H_CONF")"
    fi
}


idx_main()
{
    idx_parse "$@"
    idx_dir '/' "$IDX_HTML_DIR"
}


[[ "$0" != "$BASH_SOURCE" ]] || idx_main "$@"
